{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst TIMER_STEP = 1000;\n\nlet userSelectedDate = null;\nlet timerId = null;\n\nconst datePicker = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('[data-start]');\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\n\nflatpickr(datePicker, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedTime = selectedDates[0].getTime();\n    if (selectedTime <= Date.now()) {\n      iziToast.show({\n        title: '',\n        message: 'Please choose a date in the future',\n        color: 'red',\n        position: 'topCenter',\n      });\n      setButtonState(true);\n    } else {\n      userSelectedDate = selectedTime;\n      setButtonState(false);\n    }\n  },\n});\n\nsetButtonState(true);\n\nstartButton.addEventListener('click', () => {\n  setButtonState(true);\n  datePicker.setAttribute('disabled', 'disabled');\n\n  timerId = setInterval(() => {\n    const remaining = userSelectedDate - Date.now();\n\n    if (remaining <= 0) {\n      clearInterval(timerId);\n      renderTime(0);\n      datePicker.removeAttribute('disabled');\n      return;\n    }\n\n    renderTime(remaining);\n  }, TIMER_STEP);\n});\n\nfunction renderTime(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  daysSpan.textContent = addLeadingZero(days);\n  hoursSpan.textContent = addLeadingZero(hours);\n  minutesSpan.textContent = addLeadingZero(minutes);\n  secondsSpan.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(num) {\n  return String(num).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  return {\n    days: Math.floor(ms / day),\n    hours: Math.floor((ms % day) / hour),\n    minutes: Math.floor((ms % hour) / minute),\n    seconds: Math.floor((ms % minute) / second),\n  };\n}\n\nfunction setButtonState(isDisabled) {\n  startButton.disabled = isDisabled;\n}"],"names":["TIMER_STEP","userSelectedDate","timerId","datePicker","startButton","daysSpan","hoursSpan","minutesSpan","secondsSpan","flatpickr","selectedDates","selectedTime","iziToast","setButtonState","remaining","renderTime","ms","days","hours","minutes","seconds","convertMs","addLeadingZero","num","isDisabled"],"mappings":"2GAKA,MAAMA,EAAa,IAEnB,IAAIC,EAAmB,KACnBC,EAAU,KAEd,MAAMC,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3DC,EAAUN,EAAY,CACpB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQO,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAAE,QAAO,EACzCC,GAAgB,KAAK,OACvBC,EAAS,KAAK,CACZ,MAAO,GACP,QAAS,qCACT,MAAO,MACP,SAAU,WAClB,CAAO,EACDC,EAAe,EAAI,IAEnBZ,EAAmBU,EACnBE,EAAe,EAAK,EAEvB,CACH,CAAC,EAEDA,EAAe,EAAI,EAEnBT,EAAY,iBAAiB,QAAS,IAAM,CAC1CS,EAAe,EAAI,EACnBV,EAAW,aAAa,WAAY,UAAU,EAE9CD,EAAU,YAAY,IAAM,CAC1B,MAAMY,EAAYb,EAAmB,KAAK,IAAG,EAE7C,GAAIa,GAAa,EAAG,CAClB,cAAcZ,CAAO,EACrBa,EAAW,CAAC,EACZZ,EAAW,gBAAgB,UAAU,EACrC,MACD,CAEDY,EAAWD,CAAS,CACrB,EAAEd,CAAU,CACf,CAAC,EAED,SAASe,EAAWC,EAAI,CACtB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EACtDX,EAAS,YAAciB,EAAeL,CAAI,EAC1CX,EAAU,YAAcgB,EAAeJ,CAAK,EAC5CX,EAAY,YAAce,EAAeH,CAAO,EAChDX,EAAY,YAAcc,EAAeF,CAAO,CAClD,CAEA,SAASE,EAAeC,EAAK,CAC3B,OAAO,OAAOA,CAAG,EAAE,SAAS,EAAG,GAAG,CACpC,CAEA,SAASF,EAAUL,EAAI,CAMrB,MAAO,CACL,KAAM,KAAK,MAAMA,EAAK,KAAG,EACzB,MAAO,KAAK,MAAOA,EAAK,MAAO,IAAI,EACnC,QAAS,KAAK,MAAOA,EAAK,KAAQ,GAAM,EACxC,QAAS,KAAK,MAAOA,EAAK,IAAU,GAAM,CAC9C,CACA,CAEA,SAASH,EAAeW,EAAY,CAClCpB,EAAY,SAAWoB,CACzB"}